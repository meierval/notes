@font-face {
  font-family: 'josefin';
  src: url('../assets/fonts/josefin/JosefinSans-VariableFont_wght.ttf') format('truetype');
}

:root {
  --white: #ffffff;
  --black: #000000;
  --yellow: #f8f32b;
  --very-light-gray: #e0e0e2;
  --light-gray: #8d99ae;
  --dark-gray: #2b2d42;
  --red: #ff8552;
  --blue: #297373;

  --main-font: Verdana, Arial;
  --title-font: josefin;
  --main-font-size: 1.6rem;

  font-size: 62.5%;
}

.light-theme {
  --background-color: var(--very-light-gray);
  --title-color: var(--dark-gray);
  --topline-color: var(--yellow);
  --main-color: var(--dark-gray);
  --secondary-color: var(--light-gray);
  --note-color: var(--white);
}

.dark-theme {
  --background-color: var(--dark-gray);
  --topline-color: var(--yellow);
  --title-color: var(--very-light-gray);
  --main-color: var(--white);
  --secondary-color: var(--dark-gray);
  --note-color: var(--light-gray);
}

body {
  display: grid;
  grid-template-columns:
    minmax(10px, auto)
    minmax(1000px, 1400px)
    minmax(10px, auto);
  grid-template-rows: 10px auto auto auto auto;
  grid-column-gap: 0;
  grid-template-areas:
    'top-line top-line top-line'
    '. header .'
    '. nav .'
    '. content .'
    '. footer .';
  margin: 0;
  background-color: var(--background-color);
  font-family: var(--main-font);
  font-size: var(--main-font-size);
  color: var(--main-color);
}

.top-line {
  grid-area: top-line;
  background-color: var(--topline-color);
}

header {
  grid-area: header;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 20px 1fr;
}

header > button {
  justify-self: end;
  align-self: start;
  background: none;
  border: none;
  margin-top: 5px;
  margin-bottom: 50px;
}

header > h1 {
  justify-self: center;
  align-self: center;
  font-size: 10rem;
  font-family: var(--title-font);
  color: var(--title-color);
  border: 0.7rem solid var(--title-color);
}

main {
  grid-area: content;
  display: flex;
  flex-direction: column;
}

.note {
  display: grid;
  grid-template-columns: 35px 10fr auto 45px;
  grid-template-rows: auto auto 20px;
  grid-row-gap: 20px;
  align-items: center;
  grid-template-areas:
    'importance title creation-date status'
    'content content content content'
    'finish-by-date finish-by-date finish-by-date edit-button';
  background-color: var(--note-color);
  box-shadow: 1px 1px 1px 0 var(--secondary-color);
  margin-bottom: 30px;
  padding: 1rem 2rem 1rem 2rem;
}

.note#new-note-form {
  display: none;
}

.note.editable {
  grid-template-areas:
    'importance title creation-date status'
    'content content content content'
    'finish-by-date finish-by-date save-button cancel-button';
}

.note > .importance {
  grid-area: importance;
  justify-self: center;
  font-size: 1.8rem;
  color: var(--red);
}

.note > .title {
  grid-area: title;
  font-size: 2rem;
  justify-self: left;
  width: 95%;
  background-color: transparent;
}

.note > .title.editable {
  font-family: var(--main-font);
  font-weight: 700;
  border-left-width: 0;
  border-right-width: 0;
  border-top-width: 0;
  border-bottom: 2px solid transparent;
}

.note > .title.editable:focus {
  outline: none;
  border-bottom-color: var(--yellow);
}

.note > .creation-date {
  grid-area: creation-date;
  justify-self: right;
  background-color: var(--secondary-color);
  color: var(--note-color);
  padding: 1px;
  border: 1px solid var(--secondary-color);
  border-radius: 7px;
}

.note > .finish-by-date {
  grid-area: finish-by-date;
  justify-self: left;
  background-color: var(--secondary-color);
  color: var(--note-color);
  padding: 1px;
  border: 1px solid var(--secondary-color);
  border-radius: 7px;
  height: 1.9rem;
}
.note > .finish-by-date > .editable {
  font-family: var(--main-font);
  font-size: var(--main-font-size);
  background-color: inherit;
  border: inherit;
  height: inherit;
  color: inherit;
  border-radius: inherit;
}

.note > .status {
  grid-area: status;
  justify-self: right;
}

.note > .content {
  grid-area: content;
  overflow: hidden;
  white-space: pre-wrap;
  margin: 0;
  width: 100%;
  background-color: transparent;
}

.note > .content.editable {
  outline: none;
  font-family: var(--main-font);
  font-weight: 400;
  font-size: var(--main-font-size);
  border-bottom-width: 0;
  border-right-width: 0;
  border-top-width: 0;
  border-left: 2px solid transparent;
  resize: none;
}

.note > .content.editable:focus {
  outline: none;
  border-left-color: var(--yellow);
}

button {
  font-size: 2rem;
  background-color: transparent;
  border: none;
  color: var(--main-color);
  padding: 5px;
  outline: none;
  text-align: center;
  line-height: var(--main-font-size);
}

svg {
  fill: var(--main-color);
  width: var(--main-font-size);
  height: var(--main-font-size);
}

svg > path.arrow-line,
path.arrow-up,
path.arrow-down,
path.toggle-on,
path.toggle-on {
  display: none;
}

.note > .save-button {
  grid-area: save-button;
  justify-self: right;
  margin-right: 10px;
}

.note > .edit-button {
  grid-area: edit-button;
  justify-self: right;
}

.note > .cancel-button {
  grid-area: cancel-button;
  justify-self: right;
}

nav {
  grid-area: nav;
  align-self: center;
  justify-self: center;
  margin-bottom: 10px;
  display: grid;
  width: 100%;
  grid-template-areas:
    'add add'
    'order filter';
}

#new-note-button {
  background-color: var(--blue);
  color: var(--white);
  width: 100%;
}

nav > .add {
  justify-self: center;
  align-self: center;
  grid-area: add;
  width: 33%;
}

nav > .order {
  grid-area: order;
  justify-self: left;
}

nav > .filter {
  grid-area: filter;
  justify-self: right;
}

footer {
  grid-area: footer;
}

/* Inputs styling */
input .status {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

input[type='checkbox'] {
  display: none;
}

.status > label {
  position: relative;
}

.status span::before,
.status span::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}

.status span.checkbox::before {
  width: 25px;
  height: 25px;
  padding: 1px;
  border: 1px solid var(--secondary-color);
  border-radius: 7px;
  left: -35px;
  top: 2px;
  box-sizing: border-box;
  transition: border-color 0.2s;
}

.status span.checkbox:hover::before {
  border: 1px solid var(--main-color);
}

.status span.checkbox::after {
  width: 25px;
  height: 25px;
  content: '✔️';
  font-size: 14px;
  left: -31px;
  top: 7px;
  color: transparent;
  transition: color 0.2s;
}

input[type='checkbox']:checked + label span.checkbox::after {
  color: var(--yellow);
}
